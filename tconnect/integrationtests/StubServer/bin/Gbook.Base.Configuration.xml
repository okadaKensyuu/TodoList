<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gbook.Base.Configuration</name>
    </assembly>
    <members>
        <member name="T:Gbook.Base.Configuration.Config">
            <summary>
            統一した方法で設定を取得するためのクラスです。
            </summary>
        </member>
        <member name="M:Gbook.Base.Configuration.Config.Get``1(System.String)">
            <summary>
            指定されたキーの値を設定から取得します。
            取得した値は型パラメータで指定された型で返します。
            stringやintなど標準的な型のみ変換可能で、変換できない型が指定された場合は例外になります。
            また、指定されたキーの値が存在しない場合、例外を返します。
            </summary>
        </member>
        <member name="M:Gbook.Base.Configuration.Config.Has(System.String)">
            <summary>
            設定に指定されたキーがあるかどうかを返します。
            </summary>
        </member>
        <member name="M:Gbook.Base.Configuration.Config.Equals(System.Object,System.Object)">
            使用しません。
        </member>
        <member name="M:Gbook.Base.Configuration.Config.ReferenceEquals(System.Object,System.Object)">
            使用しません。
        </member>
        <member name="P:Gbook.Base.Configuration.Config.Item">
            <summary>
            設定を格納したオブジェクトを取得します。
            </summary>
        </member>
        <member name="T:Gbook.Base.Configuration.ConfigBase">
            <summary>
            設定の既定の実装を提供する抽象クラスです。
            </summary>
            <summary>
            設定の既定の実装を提供する抽象クラスです。
            </summary>
        </member>
        <member name="T:Gbook.Base.Configuration.IConfig">
            <summary>
            設定のインターフェースです。
            </summary>
        </member>
        <member name="M:Gbook.Base.Configuration.IConfig.Get``1(System.String)">
            <summary>
            指定したキーに対応する値を任意の型に変換して取得します。
            </summary>
            <typeparam name="T">変換先の型</typeparam>
            <param name="key">キー</param>
            <returns>変換された値</returns>
        </member>
        <member name="M:Gbook.Base.Configuration.IConfig.Has(System.String)">
            <summary>
            指定したキーに対応する値を持っているかどうかを取得します。
            </summary>
            <param name="key">キー</param>
            <returns>あれば、true なければ false</returns>
        </member>
        <member name="P:Gbook.Base.Configuration.IConfig.Item(System.String)">
            <summary>
            指定したキーに対応する値を文字列で取得します。
            </summary>
            <param name="key">キー</param>
            <returns>キーに対応する値</returns>
        </member>
        <member name="M:Gbook.Base.Configuration.ConfigBase.Convert``1(System.String)">
            <summary>
            文字列を任意の型に変換します。
            </summary>
            <typeparam name="T">変換先の型</typeparam>
            <param name="value">変換される値</param>
            <returns>変換された値</returns>
        </member>
        <member name="M:Gbook.Base.Configuration.ConfigBase.GetValue(System.String)">
            <summary>
            指定したキーに対応する値を取得します。
            </summary>
            <param name="key">キー</param>
            <returns>キーに対応する値</returns>
        </member>
        <member name="M:Gbook.Base.Configuration.ConfigBase.Get``1(System.String)">
            <summary>
            指定したキーに対応する値を任意の型に変換して取得します。
            </summary>
            <typeparam name="T">変換先の型</typeparam>
            <param name="key">キー</param>
            <returns>変換された値</returns>
        </member>
        <member name="M:Gbook.Base.Configuration.ConfigBase.Has(System.String)">
            <summary>
            指定したキーに対応する値を持っているかどうかを取得します。
            </summary>
            <param name="key">キー</param>
            <returns>あれば、true なければ false</returns>
        </member>
        <member name="P:Gbook.Base.Configuration.ConfigBase.Item(System.String)">
            <summary>
            指定したキーに対応する値を文字列で取得します。
            </summary>
            <param name="key">キー</param>
            <returns>キーに対応する値</returns>
        </member>
        <member name="T:Gbook.Base.Configuration.Internals.ConfigSetter">
            <summary>
            これは設定を注入するためのプロパティです。
            設定のクライアントコードはこのクラスを直接使用しないでください。
            </summary>
        </member>
        <member name="M:Gbook.Base.Configuration.Internals.ConfigSetter.SetItem(Gbook.Base.Configuration.IConfig)">
            <summary>
            設定を注入します。
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Gbook.Base.Configuration.DefaultConfig">
            <summary>
            AppConfigとCloudConfigから設定を取得する機能を提供するクラスです。
            </summary>
        </member>
        <member name="M:Gbook.Base.Configuration.DefaultConfig.#ctor">
            <summary>
            オブジェクトを初期化します。
            </summary>
        </member>
        <member name="M:Gbook.Base.Configuration.DefaultConfig.GetValue(System.String)">
            <summary>
            指定したキーに対応する値を取得します。
            </summary>
            <param name="key">キー</param>
            <returns>キーに対応する値</returns>
        </member>
        <member name="T:Gbook.Base.Configuration.TestUtils.PseudoConfig">
            <summary>
            テストに使用するためのIConfigの実装です。
            設定をIDictionaryによって擬似的に再現します。
            </summary>
        </member>
        <member name="M:Gbook.Base.Configuration.TestUtils.PseudoConfig.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            設定を格納したIDictionaryを元にオブジェクトを構築します。
            </summary>
            <param name="config">設定を格納したオブジェクト</param>
        </member>
        <member name="M:Gbook.Base.Configuration.TestUtils.PseudoConfig.GetValue(System.String)">
            <summary>
            キーに対応する値を取り出します。
            対応する値がなかった場合はnullを返します。
            </summary>
            <param name="key">取り出したい値に対応するキー</param>
            <returns>キーに対応する値、もしくはnull(見つからなかった場合)</returns>
        </member>
        <member name="T:Gbook.Base.Configuration.TypeNotSupportedException">
            <summary>
            サポートされていない型に変換しようとしたときに投げられる例外です。
            </summary>
        </member>
        <member name="M:Gbook.Base.Configuration.TypeNotSupportedException.#ctor(System.Type)">
            <summary>
            オブジェクトを生成します。
            </summary>
            <param name="typeObj">変換しようとした型</param>
        </member>
    </members>
</doc>
